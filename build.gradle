plugins {
	id 'org.springframework.boot' version '2.4.3'
		id 'io.spring.dependency-management' version '1.0.11.RELEASE'
		id 'java'
		id "com.github.spotbugs" version "4.7.2"

}

group = 'com.axestrack'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


ext {
	set('springCloudVersion', "2020.0.0")
		springBootVersion = '2.5.0'
}

ext['log4j2.version'] = '2.17.1'


repositories {

	maven {
		url = uri("http://nexus.axestrack.com:8083/repository/Axestrack-all/")
			setAllowInsecureProtocol(true)
			credentials {
				username 'readonly'
					password 'b3cAr3fUl'
			}
	}


}

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


dependencies {
		implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
		testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
		implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
		implementation "org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion"
		implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
		implementation "org.springframework.cloud:spring-cloud-starter-config"
		implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
		compileOnly "org.projectlombok:lombok:1.18.22"
		annotationProcessor "org.projectlombok:lombok:1.18.22"
		implementation group: 'com.google.code.gson', name: 'gson',version:'2.9.0'
		implementation 'org.apache.commons:commons-lang3:3.12.0'

		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'

		implementation 'io.github.openfeign:feign-okhttp'
		implementation 'io.github.openfeign:feign-httpclient'



		implementation 'io.jsonwebtoken:jjwt:0.9.1'


		implementation 'com.datadoghq:java-dogstatsd-client:4.0.0'


		//implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.5'//For all DBs, if you need JDBCTemplate


		//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		//implementation 'org.mongodb:mongo-java-driver:3.12.10'
		//implementation "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
		//implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '9.2.1.jre11'
		//implementation 'org.postgresql:postgresql:42.2.18'
		//implementation group: 'org.springframework.data' ,name: 'spring-data-cassandra' ,version:'3.2.5'
		//implementation group:'com.datastax.oss' ,name:'java-driver-query-builder',version:'4.13.0'
		//implementation group:'com.datastax.oss' ,name:'java-driver-core',version:'4.13.0'
		//implementation group: 'com.datastax.oss',name:'native-protocol',version:'1.5.0'
		//implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.6.7'




		developmentOnly 'org.springframework.boot:spring-boot-devtools'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

java.sourceCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
		options.compilerArgs << '-Xlint:unchecked'
		options.deprecation = true
}

spotbugsMain.reports {
	xml.enabled = false
		html.enabled=true
}



bootJar {
	archiveFileName='car_pooling.jar'
}


test {
	useJUnitPlatform()
}


task deploy (dependsOn: bootJar) {
	doLast {
		copy{
			from "."
				into "build/libs"
				include "production*.sh"
		}

		copy{
			from "."
				into "build/libs"
				include "change_loglevel.sh"
		}

	}
}

